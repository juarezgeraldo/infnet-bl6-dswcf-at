@model PaisMVC.Models.Estado.IncluiEstado

@{
    ViewData["Title"] = "Incluir";
}

<h1>Incluir</h1>

<h4>Estado</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Incluir" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FormFile" class="control-label">Bandeira</label>
                <input asp-for="FormFile" class="form-control" type="file" />
                <span asp-validation-for="FormFile" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PaisId" class="control-label">País</label>
                <select id="PaisId" name="PaisId" class="form-select">
                    @{
                        if (ViewBag?.Paises != null)
                        {
                            foreach (var pais in ViewBag.Paises)
                            {
                                <option value="@pais.Id">@pais.Nome</option>
                            }
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Incluir" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<p>
    @Html.ActionLink("Voltar à lista", "Detalhes", "Pais", new {id = Model.PaisId}, new { @class="btn btn-light"})
</p>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
